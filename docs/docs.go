// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Авторизация по паролю или по коду из email, action = \"code\" | \"password\", Для code обязательное поле \"code\", для пароля обязательное поле \"password\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "authorization",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.authorizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.authorizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logout",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.logoutRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/auth/otp": {
            "post": {
                "description": "send code to email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "send to email one time password",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "refresh token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.refreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.refreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "get home data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "home data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getHomeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/organization": {
            "get": {
                "description": "get organization data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "info for all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getAllOrganizationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "get profile data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/organization": {
            "get": {
                "description": "get organization data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "organization data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getOrganizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "update organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "update organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Organization",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateOrganizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "post": {
                "description": "create organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "create organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createOrganizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/player": {
            "get": {
                "description": "profile player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile player"
                ],
                "summary": "profile player",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getPlayerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "update profile player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile player"
                ],
                "summary": "update profile player",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Body",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.updatePlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updatePlayerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/player/invite": {
            "get": {
                "description": "profile player invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile player"
                ],
                "summary": "profile player invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Invite id",
                        "name": "invite_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getPlayerInvitesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "update profile player invites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile player"
                ],
                "summary": "update profile player invites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updatePlayerInviteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.responseSuccess"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/setPassword": {
            "post": {
                "description": "set password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "logout",
                "parameters": [
                    {
                        "description": "set password",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.setPasswordRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.responseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/team": {
            "get": {
                "description": "get team data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "team data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team id",
                        "name": "team_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getTeamResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "update team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "update team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Team",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateTeamResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "post": {
                "description": "create team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "create team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Team",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTeamResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/team/invite": {
            "get": {
                "description": "get invite to team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "get invite to team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getInviteToTeamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "update invite to team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "update invite to team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "emails for invite",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateInviteToTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.responseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "post": {
                "description": "create invite to team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile team"
                ],
                "summary": "create invite to team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "emails for invite",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createInviteToTeamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.responseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/profile/tournament": {
            "get": {
                "description": "get tournament data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "tournament data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tournaments",
                        "name": "tournament_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getTournamentResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "put": {
                "description": "edit tournament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "edit tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Tournaments",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateTournamentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateTournamentResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            },
            "post": {
                "description": "create tournament",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile organization"
                ],
                "summary": "create tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Tournament",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createTournamentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTournamentResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/team": {
            "get": {
                "description": "get team data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "team data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team",
                        "name": "team_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getTeamResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        },
        "/tournament": {
            "get": {
                "description": "get tournament data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "tournament data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tournaments",
                        "name": "tournament_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getTournamentsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.responseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.authorizeRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "code"
                },
                "code": {
                    "type": "string",
                    "example": "123456"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.ru"
                },
                "password": {
                    "type": "string",
                    "example": "password_string"
                }
            }
        },
        "api.authorizeResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJuYmYiOjE0NDQ0Nzg0MDB9.-5myAJwbMszwt7_iPciBQgICdujy20zKOZOUTXu9KyY"
                },
                "expires_in": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "cyYTkJzAjEAgcaIIUPeZvyLpZHVuBIArVXqpInHLrbvXzgofSWKWlbZflPUToIctnWJoJInIqfDVLTIOeBGtJMRnlhseRgpHlPxh"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.createInviteToTeamRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "api.createOrganizationRequest": {
            "type": "object",
            "properties": {
                "addess": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createOrganizationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getOrganizationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.createTeamRequest": {
            "type": "object",
            "properties": {
                "game_type_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createTeamResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getTeamDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.createTournamentRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "end_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "game_type_id": {
                    "description": "вид спорта",
                    "type": "integer",
                    "example": 1
                },
                "is_team": {
                    "description": "команды или индивидульно",
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "start_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.createTournamentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getTournamentDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getAllOrganizationDataResponse": {
            "type": "object",
            "properties": {
                "addess": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getAllOrganizationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getAllOrganizationDataResponse"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getHomeResponse": {
            "type": "object",
            "properties": {
                "game_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getProfileGameTypesResponse"
                    }
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getAllOrganizationDataResponse"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTeamsDataResponse"
                    }
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTournamentsDataResponse"
                    }
                },
                "user_Id": {
                    "type": "integer"
                }
            }
        },
        "api.getInviteToTeamData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.getInviteToTeamResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getInviteToTeamData"
                    }
                },
                "invite_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getOrganizationDataResponse": {
            "type": "object",
            "properties": {
                "addess": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getOrganizationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getOrganizationDataResponse"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getPlayerDataResponse": {
            "type": "object",
            "properties": {
                "b_day": {
                    "type": "string",
                    "example": "2000-12-31"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "second_name": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getPlayerTeamDataResponse"
                    }
                }
            }
        },
        "api.getPlayerInvitesDataResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                },
                "team_title": {
                    "type": "string"
                }
            }
        },
        "api.getPlayerInvitesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getPlayerInvitesDataResponse"
                    }
                },
                "invite_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getPlayerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getPlayerDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getPlayerTeamDataResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getProfileGameTypesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getProfileResponse": {
            "type": "object",
            "properties": {
                "game_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getProfileGameTypesResponse"
                    }
                },
                "invite_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "invites_to_team": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getPlayerInvitesDataResponse"
                    }
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getOrganizationDataResponse"
                    }
                },
                "player": {
                    "$ref": "#/definitions/api.getPlayerDataResponse"
                },
                "success": {
                    "type": "boolean"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTeamDataResponse"
                    }
                },
                "tournaments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTournamentsDataResponse"
                    }
                }
            }
        },
        "api.getTeamDataResponse": {
            "type": "object",
            "properties": {
                "game_type_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getTeamResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTeamDataResponse"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.getTeamsDataResponse": {
            "type": "object",
            "properties": {
                "game_type_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getTournamentDataResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "end_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "game_type_id": {
                    "description": "вид спорта",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_team": {
                    "description": "команды или индивидульно",
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "start_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getTournamentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTournamentDataResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.getTournamentsDataResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "end_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "game_type_id": {
                    "description": "вид спорта",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_team": {
                    "description": "команды или индивидульно",
                    "type": "boolean"
                },
                "organization_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "start_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 15:04:05"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.getTournamentsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.getTournamentsDataResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.loginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.ru"
                }
            }
        },
        "api.loginResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.logoutRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "cyYTkJzAjEAgcaIIUPeZvyLpZHVuBIArVXqpInHLrbvXzgofSWKWlbZflPUToIctnWJoJInIqfDVLTIOeBGtJMRnlhseRgpHlPxh"
                }
            }
        },
        "api.refreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "cyYTkJzAjEAgcaIIUPeZvyLpZHVuBIArVXqpInHLrbvXzgofSWKWlbZflPUToIctnWJoJInIqfDVLTIOeBGtJMRnlhseRgpHlPxh"
                }
            }
        },
        "api.refreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJuYmYiOjE0NDQ0Nzg0MDB9.-5myAJwbMszwt7_iPciBQgICdujy20zKOZOUTXu9KyY"
                },
                "expires_in": {
                    "type": "string",
                    "example": "2006-01-02 15:04:05"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "cyYTkJzAjEAgcaIIUPeZvyLpZHVuBIArVXqpInHLrbvXzgofSWKWlbZflPUToIctnWJoJInIqfDVLTIOeBGtJMRnlhseRgpHlPxh"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.responseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "api.responseSuccess": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.setPasswordRequest": {
            "type": "object",
            "properties": {
                "old_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password2": {
                    "type": "string"
                }
            }
        },
        "api.updateInviteToTeamRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/model.TeamInviteStatus"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "api.updateOrganizationRequest": {
            "type": "object",
            "properties": {
                "addess": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateOrganizationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getOrganizationDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.updatePlayerDataResponse": {
            "type": "object",
            "properties": {
                "bday": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "second_name": {
                    "type": "string"
                }
            }
        },
        "api.updatePlayerInviteRequest": {
            "type": "object",
            "properties": {
                "invite_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.updatePlayerRequest": {
            "type": "object",
            "properties": {
                "bday": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "second_name": {
                    "type": "string"
                }
            }
        },
        "api.updatePlayerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.updatePlayerDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.updateTeamRequest": {
            "type": "object",
            "properties": {
                "game_type_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateTeamResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getTeamDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.updateTournamentRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "end_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "game_type_id": {
                    "description": "вид спорта",
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer"
                },
                "is_team": {
                    "description": "команды или индивидульно",
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "start_registration_date": {
                    "type": "string",
                    "example": "2023-12-31 00:00:00"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.updateTournamentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.getTournamentDataResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.TeamInviteStatus": {
            "type": "string",
            "enum": [
                "wait",
                "sended",
                "accepted",
                "rejected",
                "cancel"
            ],
            "x-enum-varnames": [
                "TIWait",
                "TISended",
                "TIAccepted",
                "TIRejected",
                "TICancel"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
