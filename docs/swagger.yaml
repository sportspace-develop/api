definitions:
  rest.pagination:
    properties:
      currentPage:
        type: integer
      nextPage:
        type: integer
      prevPage:
        type: integer
      totalPages:
        type: integer
      totalRecords:
        type: integer
    type: object
  rest.tApplication:
    properties:
      id:
        type: integer
      status:
        type: string
      tournamentId:
        type: integer
      tournamentLogoUrl:
        type: string
      tournamentTitle:
        type: string
    type: object
  rest.tAuthorization:
    properties:
      email:
        type: string
      otp:
        description: Password string `json:"password"`
        type: string
    type: object
  rest.tCreateTeam:
    properties:
      logoUrl:
        type: string
      photoUrl:
        type: string
      title:
        type: string
    type: object
  rest.tCreateTournamentRequest:
    properties:
      description:
        type: string
      endDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      logoUrl:
        type: string
      organization:
        type: string
      registerEndDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      registerStartDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      startDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      title:
        type: string
    required:
    - endDate
    - startDate
    - title
    type: object
  rest.tGetApplicationResponse:
    properties:
      id:
        type: integer
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      status:
        type: string
      tournamentId:
        type: integer
      tournamentTitle:
        type: string
    type: object
  rest.tGetApplicationsTeamResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/rest.tApplication'
        type: array
    type: object
  rest.tGetPlayersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      pagination:
        $ref: '#/definitions/rest.pagination'
    type: object
  rest.tGetTeamResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      logoUrl:
        type: string
      photoUrl:
        type: string
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      title:
        type: string
    type: object
  rest.tGetTeamsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/rest.tTeam'
        type: array
      pagination:
        $ref: '#/definitions/rest.pagination'
    type: object
  rest.tGetTorunamentApplicationResponse:
    properties:
      id:
        type: integer
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      status:
        type: string
      teamId:
        type: integer
      teamTitle:
        type: string
    type: object
  rest.tGetTorunamentsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/rest.tTournamentResponse'
        type: array
      pagination:
        $ref: '#/definitions/rest.pagination'
    type: object
  rest.tGetTournamentApplicationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/rest.tTournamentApplication'
        type: array
    type: object
  rest.tHandlerUploadResponse:
    properties:
      filename:
        type: string
      url:
        type: string
    type: object
  rest.tLoginResponse:
    properties:
      error:
        type: string
      userID:
        example: 1
        type: integer
    type: object
  rest.tNewApplicationRequest:
    properties:
      playerIds:
        items:
          type: integer
        type: array
      tournamentId:
        type: integer
    type: object
  rest.tNewApplicationResponse:
    properties:
      id:
        type: integer
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      status:
        type: string
      tournamentId:
        type: integer
      tournamentTitle:
        type: string
    type: object
  rest.tNewPlayerBatchRequest:
    properties:
      bDay:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      photoUrl:
        type: string
      secondName:
        type: string
    type: object
  rest.tNewPlayerBatchResponse:
    properties:
      data:
        description: Pagination pagination         `json:"pagination"`
        items:
          $ref: '#/definitions/rest.tPlayerBatchResponse'
        type: array
    type: object
  rest.tNewPlayerRequest:
    properties:
      bDay:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      firstName:
        type: string
      lastName:
        type: string
      photoUrl:
        type: string
      secondName:
        type: string
    type: object
  rest.tPlayerBatchResponse:
    properties:
      bDay:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      photoUrl:
        type: string
      secondName:
        type: string
    type: object
  rest.tPlayerResponse:
    properties:
      bDay:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      photoUrl:
        type: string
      secondName:
        type: string
    type: object
  rest.tRequestOTP:
    properties:
      email:
        type: string
    type: object
  rest.tTeam:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      logoUrl:
        type: string
      photoUrl:
        type: string
      title:
        type: string
    type: object
  rest.tTournamentApplication:
    properties:
      id:
        type: integer
      status:
        type: string
      teamId:
        type: integer
      teamLogoUrl:
        type: string
      teamTitle:
        type: string
    type: object
  rest.tTournamentResponse:
    properties:
      description:
        type: string
      endDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      id:
        type: integer
      logoUrl:
        type: string
      organization:
        type: string
      organizationID:
        type: integer
      registerEndDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      registerStartDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      startDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      title:
        type: string
    type: object
  rest.tUpdApplicationResponse:
    properties:
      id:
        type: integer
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      status:
        type: string
      tournamentId:
        type: integer
      tournamentTitle:
        type: string
    type: object
  rest.tUpdApplicationStatusRequest:
    properties:
      playerIds:
        items:
          type: integer
        type: array
      status:
        enum:
        - submit
        - cancel
        type: string
    type: object
  rest.tUpdTeamRequest:
    properties:
      logoUrl:
        type: string
      photoUrl:
        type: string
      playerIds:
        items:
          type: integer
        type: array
      title:
        type: string
    type: object
  rest.tUpdTeamResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      logoUrl:
        type: string
      photoUrl:
        type: string
      players:
        items:
          $ref: '#/definitions/rest.tPlayerResponse'
        type: array
      title:
        type: string
    type: object
  rest.tUpdTournamentApplicationRequest:
    properties:
      status:
        enum:
        - accept
        - reject
        type: string
    type: object
  rest.tUpdTournamentRequest:
    properties:
      description:
        type: string
      endDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      logoUrl:
        type: string
      organization:
        type: string
      registerEndDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      registerStartDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      startDate:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      title:
        type: string
    required:
    - endDate
    - startDate
    type: object
  rest.tUpdatePlayerRequest:
    properties:
      bDay:
        example: "2024-12-31T06:00:00+03:00"
        type: string
      firstName:
        type: string
      lastName:
        type: string
      photoUrl:
        type: string
      secondName:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: authorization
      parameters:
      - description: User email and password
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/rest.tAuthorization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.tLoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.tLoginResponse'
        "500":
          description: Internal Server Error
      summary: authorization
      tags:
      - auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: logout
      tags:
      - auth
  /auth/otp:
    post:
      consumes:
      - application/json
      description: send code to email
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/rest.tRequestOTP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: send to email one time password
      tags:
      - auth
  /tournaments:
    get:
      consumes:
      - application/json
      description: все турниры
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: limit size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTorunamentsResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: все турниры
      tags:
      - guest
  /user:
    get:
      consumes:
      - application/json
      description: user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: user info
      tags:
      - user
  /user/players:
    get:
      description: Все игроки
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: limit size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetPlayersResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Все игроки
      tags:
      - user players
    post:
      description: Добавить игрока
      parameters:
      - description: player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/rest.tNewPlayerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.tPlayerResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Добавить игрока
      tags:
      - user players
  /user/players/{player_id}:
    put:
      description: обновить игрока
      parameters:
      - description: player id
        in: path
        name: player_id
        required: true
        type: integer
      - description: player
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/rest.tUpdatePlayerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tPlayerResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: обновить игрока
      tags:
      - user players
  /user/players/batch:
    post:
      description: Добавить/Обновить игроков
      parameters:
      - description: players
        in: body
        name: players
        required: true
        schema:
          items:
            $ref: '#/definitions/rest.tNewPlayerBatchRequest'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.tNewPlayerBatchResponse'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Добавить/Обновить игроков
      tags:
      - user players
  /user/teams:
    get:
      description: команды пользователя
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: limit size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTeamsResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: команды пользователя
      tags:
      - user team
    post:
      consumes:
      - application/json
      description: создать команду
      parameters:
      - description: team
        in: body
        name: tournamet
        required: true
        schema:
          $ref: '#/definitions/rest.tCreateTeam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.tTeam'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: создать команду
      tags:
      - user team
  /user/teams/{team_id}:
    get:
      description: информация команды пользователя
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTeamResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: информация команды пользователя
      tags:
      - user team
    put:
      description: обновление команды пользователя
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      - description: team
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/rest.tUpdTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tUpdTeamResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: обновление команды пользователя
      tags:
      - user team
  /user/teams/{team_id}/applications:
    get:
      description: заявки команды
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetApplicationsTeamResponse'
        "400":
          description: команда не найдена
        "500":
          description: Internal Server Error
      summary: заявки команды
      tags:
      - user team
    post:
      description: подать заявку
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      - description: application
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/rest.tNewApplicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: заявка создана
          schema:
            $ref: '#/definitions/rest.tNewApplicationResponse'
        "400":
          description: не корректный запрос
        "409":
          description: "заявка\tуже\tбыла создана ранее"
        "500":
          description: Internal Server Error
      summary: подать заявку
      tags:
      - user team
  /user/teams/{team_id}/applications/{application_id}:
    get:
      description: заявка команды
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      - description: application id
        in: path
        name: application_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetApplicationResponse'
        "400":
          description: не корректный запрос
        "500":
          description: Internal Server Error
      summary: заявка команды
      tags:
      - user team
    put:
      description: изменить заявку
      parameters:
      - description: team id
        in: path
        name: team_id
        required: true
        type: integer
      - description: "application\tid"
        in: path
        name: application_id
        required: true
        type: integer
      - description: application status
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/rest.tUpdApplicationStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tUpdApplicationResponse'
        "204":
          description: заявка не найдена
        "400":
          description: не найден или не может изменить
        "500":
          description: Internal Server Error
      summary: изменить заявку
      tags:
      - user team
  /user/tournaments:
    get:
      consumes:
      - application/json
      description: турниры пользователя
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: limit size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTorunamentsResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: турниры пользователя
      tags:
      - user tournament
    post:
      consumes:
      - application/json
      description: создать турнир
      parameters:
      - description: tournament
        in: body
        name: tournamet
        required: true
        schema:
          $ref: '#/definitions/rest.tCreateTournamentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.tTournamentResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: создать турнир
      tags:
      - user tournament
  /user/tournaments/{tournament_id}:
    get:
      description: информация турнира пользователя
      parameters:
      - description: tournament id
        in: path
        name: tournament_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tTournamentResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: информация турнира пользователя
      tags:
      - user tournament
    put:
      consumes:
      - application/json
      description: Обновить турнир
      parameters:
      - description: tournament id
        in: path
        name: tournament_id
        required: true
        type: integer
      - description: tournament
        in: body
        name: tournamet
        required: true
        schema:
          $ref: '#/definitions/rest.tUpdTournamentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Обновить турнир
      tags:
      - user tournament
  /user/tournaments/{tournament_id}/applications:
    get:
      description: заявки на турнир
      parameters:
      - description: tournament id
        in: path
        name: tournament_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTournamentApplicationsResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: заявки на турнир
      tags:
      - user tournament
  /user/tournaments/{tournament_id}/applications/{application_id}:
    get:
      description: заявка турнира
      parameters:
      - description: tournament id
        in: path
        name: tournament_id
        required: true
        type: integer
      - description: application id
        in: path
        name: application_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tGetTorunamentApplicationResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: заявка турнира
      tags:
      - user tournament
    put:
      description: изменить заявку
      parameters:
      - description: tournament id
        in: path
        name: tournament_id
        required: true
        type: integer
      - description: application id
        in: path
        name: application_id
        required: true
        type: integer
      - description: application
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/rest.tUpdTournamentApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.tApplication'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: изменить заявку
      tags:
      - user tournament
  /user/upload:
    post:
      consumes:
      - application/json
      description: загрузка файла
      parameters:
      - description: файл
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.tHandlerUploadResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: загрузка файла
      tags:
      - user
swagger: "2.0"
